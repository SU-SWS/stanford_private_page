<?php
/**
 * Install tasks.
 */

/**
 * Implements hook_install().
 */
function stanford_private_page_install() {

  // Let's keep the default settings defined in only one place.
  $settings = stanford_private_page_get_settings();
  variable_set('stanford_stanford_private_page_settings', $settings);
  // Setting access permissions for roles if they exist.
  $roles = array('site owner', 'editor', 'site member');
  $caspp = array();
  $rids = array();
  foreach ($roles as $role_name) {
    $role = user_role_load_by_name($role_name);
    if ($role->rid) {
      $rids[] = $role->rid;
    }
  }
  if ($admin_role = user_role_load_by_name('administrator')) {
    $rids[] = $admin_role->rid;
  }
  $current = variable_get('content_access_stanford_private_page', array());
  $caspp = array('view_own' => $rids, 'view' => $rids);
  $merged = array_merge_recursive_ex($current, $caspp);
  variable_set('content_access_stanford_private_page', $merged);
  node_access_rebuild();
}

/**
 * [array_merge_recursive_ex description]
 * @param  [type] $array1 [description]
 * @param  [type] $array2 [description]
 * @return [type]         [description]
 */
function array_merge_recursive_ex(array & $array1, array & $array2) {
  $merged = $array1;
  foreach ($array2 as $key => & $value) {
    if (is_array($value) && isset($merged[$key]) && is_array($merged[$key])) {
      $merged[$key] = array_merge_recursive_ex($merged[$key], $value);
    }
    elseif (is_numeric($key)) {
      if (!in_array($value, $merged)) {
        $merged[] = $value;
      }
    }
    else {
      $merged[$key] = $value;
    }
  }
  return $merged;
}

/**
 * Implements hook_uninstall().
 */
function stanford_private_page_uninstall() {
  variable_del('stanford_stanford_private_page_settings');
  variable_set('content_access_stanford_private_page', array());
}
